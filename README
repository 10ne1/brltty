BRLTTY - A background process providing access to the Linux console (when in
         text mode) for a blind person using a refreshable braille display.

Version 2.99 (beta), June 2001

Copyright (C) 1995-2000 by The BRLTTY Team, All rights reserved.

Web Page: http://www.cam.org/~nico/brltty

If you have any interest in BRLTTY, please drop us a note. We are
interested in knowing who BRLTTY users are and how many there are. Even if
all goes well and you have no problems with this package, please let us
know you're there and tell us which brand of display you use. If you have
problems, we will be happy to help.  If you have suggestions, comments or
if you wish to contribute, you are welcome! 


BRLTTY comes with ABSOLUTELY NO WARRANTY.

This is free software, placed under the terms of the
GNU General Public License, as published by the Free Software
Foundation.  Please see the file COPYING for details.

This software is maintained by Nicolas Pitre <nico@cam.org>.

-----------------------------------------------------------------------------


INTRODUCTION FOR THOSE NEW TO SOFT BRAILLE
==========================================

There are two common ways in which blind people access computers.  The 
first, and more widely known, is synthesized speech, which, while having 
many advantages (e.g. speed for reading plain text), does have its 
drawbacks: speech output generally gives little information about 
formatting, making tables, spreadsheets etc. difficult to use; it can also 
be difficult to use speech output with particularly technical material 
containing lots of symbols (though many determined people do use it for 
such things).

The other solution, which attempts to answer some of these problems, is 
Braille output.  A soft (or refreshable) Braille display typically consists 
of a single row of either 20, 40 or 80 characters, each made up of a matrix 
of 4X2 (4 down, 2 across) dots.  Each dot is individually driven by a 
separate motor, making the whole assembly extremely expensive.

A soft Braille display would connect to a PC by either the serial or 
parallel port.  Software on the PC drives the display, reproducing a 
rectangle of the screen image (which we will call the window) in Braille.  
Buttons on the Braille display itself are used to send signals back to the 
software, instructing it to move the window around the screen, or some 
other specialised function.

With a soft Braille display of 40 or 80 cells, it is quite easy for a blind 
user to appreciate the format of information on the screen, and even allows 
the reading and editing of on-line Braille documents (a concept not widely 
enough utilised).


INTRODUCTION TO BRLTTY
======================

While soft Braille displays have been used for many years under MS-DOS,
and are even being used under Windows now, it seems that they have
not been used on Unix consoles so much.  This could well be because blind
people have been able to access Unix systems through accessible terminals. 
With the advent of PC-based Unix systems (such as Linux), the need becomes
evident. 

BRLTTY attempts to fill this gap.  It runs as a daemon, possibly started
at boot-time, and allows a soft Braille user to access text mode
applications directly from the Linux's virtual consoles.  Since BRLTTY is
written as a daemon, it should allow a user a completely free choice of
application and development tools. 


FEATURES
========

  -  Full implementation of the standard screen review facilities.
  -  A wide range of additional optional features, including blinking 
     cursor and capital letters, screen freezing for leisurely review,
     attribute display and attribute underlining to locate highlighted text,
     hypertext links, etc.
  -  `Intelligent' cursor routing.  This allows easy movement of the cursor
     in text editors etc. without moving the hands from the Braille 
     display.
  -  A cut & paste function.  This is particularly useful for copying long
     filenames, complicated commands etc.
  -  An on-line help facility.
  -  A configuration menu.
  -  Support for multiple Braille codes.
  -  Modular design allows relatively easy addition of drivers for other
     Braille displays, or even (hopefully) porting to other Unix-like
     platforms.
  -  Basic speech complement support.


CURRENTLY SUPPORTED HARDWARE
============================

BRLTTY requires Linux kernel 1.1.92 or later (for `/dev/vcsa0').  It has
been tested on

  -  a variety of Intel based PCs: both laptops and desktops; 
  -  an Alpha workstation;
  -  a StrongARM based Netwinder;
  -  a number of Linux kernels, from 1.2.13 to 2.2.x;
  -  all major distributions, including Red Hat, Debian, Slackware;

The following Braille displays are supported (serial communication
only for most of them):

  - Tieman B.V.: CombiBraille 25/45/85;
  - Alva B.V.: ABT3 and Delphi series, serial and parallel ports;
  - Telesensory Systems Inc.: PowerBraille 40 / 65/81,
    Navigator 20/40/80 (latest firmware version only?);
  - Papenmeier Terminal;
  - EuroBraille family of displays (tested only on ClioBraille 40);
  - Blazie Engineering's BrailleLite 18 and 40;
  - EcoBraille from La O.N.C.E.;
  - BAUM Vario;
  - MDV braille displays;
  - Tieman MultiBraille;

Ability to add more Braille displays does depend on the level of
cooperation from the manufacturer in providing programming information.


LAYOUT OF THE ARCHIVE
=====================

BRLTTY is distributed as a single GNU compressed tarfile named
   brltty-<version>.tar.gz
where `<version>' is the version number.  When the archive is
unpacked, there should be a subdirectory called DOCS: this contains
all of the general BRLTTY documentation, including the manual in
various formats and the list of frequently asked questions (FAQ).

The source files for the main, device-independent core of BRLTTY is in
the top-level directory.  There is also one subdirectory per Braille
device type, containing display-specific source files and
documentation (in another README file).

Finally, some braille definition tables are available in the BrailleTables
subdirectory along with some tools to manipulate them.


BUILDING THE PACKAGE
====================

Simply invoking 'make' will build BRLTTY and all driver libraries.  To build
BRLTTY with a specific built-in driver, just edit the main Makefile and 
uncomment the driver specification you want to see linked with the main 
executable before invoking 'make'.  Then, as root, 'make install' will
install all files to their proper location.

For information specific to a particular driver, please see the README
file in the corresponding subdirectory.  Finally, see the DOC subdirectory
for BRLTTY manuals and miscelaneous informations.


EXECUTING BRLTTY
================

If you compiled BRLTTY with a braille driver built-in, simply invoking
'brltty' should start BRLTTY with all defaults.  Alternatively you might
need to specify a braille driver with the -b option.  Also 'brltty -h'
will display a brief summary of all available options.

You may use a configuration file with most options as well.  See the
example configuration file in the DOC/ subdirectory.

And don't forget to review the notes for your braille terminal. See the
README file in the driver's subdirectory.


THE BRLTTY TEAM
===============

Many people contributed to the development of BRLTTY, most notably:

Nicolas Pitre <nico@cam.org>
  Current BRLTTY project maintainer, core development, speech framework,
  Alva and Eurobraille driver, BrailleLite driver tweaks.

Stéphane Doyon <s.doyon@videotron.ca>
  Driver for TSI displays (Navigator and PowerBraille), core development,
  cut and paste function, beeps, and many other miscelaneous features.

August Hörandl <august.hoerandl@gmx.at>
  Papenmeier driver, initial run-time loadable driver module design.

Dave Mielke <dave@mielke.cc>
  Run-time loadable speech modules, Accent SA support, many tweaks.

Nikhil Nair <nn201@cus.cam.ac.uk>
  Founder of the BRLTTY project and author of the Tieman B.V. CombiBraille
  driver, and the original BrailleLite driver. No more active developer.

James Bowden <jrbowden@bcs.org.uk>
  original BRLTTY coauthor, no longer active.

And all other individual driver authors.

Any comments and/or criticisms regarding BRLTTY in general should be
addressed to Nicolas Pitre and/or Stéphane Doyon.

