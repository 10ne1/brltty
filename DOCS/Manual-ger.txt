  BRLTTY
  Access Software for Unix for a Blind Person Using a Soft Braille Ter­
  minal
  Nikhil Nair <nn201@cus.cam.ac.uk>
  Nicolas Pitre <nico@cam.org>
  Stéphane Doyon <s.doyon@videotron.ca>
  Version 2.0, June 1998

  Copyright (C) 1995-98 by The BRLTTY Team, All Rights Reserved.  This
  is free software, placed under the terms of The GNU General Public
  License.  BRLTTY comes with ABSOLUTELY NO WARRANTY.
  ______________________________________________________________________

  Table of Contents:

  1.      Einführung

  1.1.    Kurzer Rückblick

  1.2.    Systemanforderungen

  1.3.    Anfangsinstallation und Testen

  1.4.    Installation für täglichen Gebrauch

  2.      Benützung von BRLTTY

  2.1.    Grundlegende Bewegungstasten

  2.2.    Andere Steuerungen

  2.3.    Cursorbewegung

  2.4.    Ausschneiden und Einfügen

  2.5.    Das Online-Konfigurationsmenü

  2.6.    Befehl für Zeilenoptionen

  3.      Konfigurieren von BRLTTY

  3.1.    Die Braille-Übersetzungstabellen

  3.2.    Tabellenhilfsprogramme

  4.      Anhang

  4.1.    Verzichterklärung und Lizenz

  4.2.    Hilfe und Unterstützung

  4.3.    BRLTTY auf Installations- und Rettungsdisketten

  4.4.    Zukünftige Erweiterungen

  4.5.    Bekannte Fehler
  ______________________________________________________________________

  1.  Einführung

  BRLTTY soll einem BRAILLE-Leser Zugang zur Konsole eines Unix-Systems
  geben. Früher konnte dies nur durch ein wirkungsvolles Terminal
  erreicht werden, das mit einem Hilfscomputer verbunden war. BRLTTY
  verwendet eine Soft-BRAILLE-Anzeige, die einen Teil des
  Bildschirmbildes als BRAILLE-Punkte wiedergibt (in diesem Handbuch als
  "das Fenster" bezeichnet).
  1.1.  Kurzer Rückblick

  Das BRLTTY-Projekt startete im Juli 1995, das Team bestand damals aus
  Nikhil Nair und James Bowden. Die erste Version arbeitete mit Blazie
  Engineering's BRAILLE Lite; dies war jedoch keine geeignete Soft-
  BRAILLE-Anzeige für einen Computer, da die Reaktionszeit viel zu lang
  war.  BRAILLE LITE wird nicht länger unterstützt, obwohl es in Zukunft
  wieder ins Auge gefaßt werden könnte.

  Im September 1995 entstand die zweite Version, also 0.22 BETA; sie war
  die erste, die veröffentlicht wurde. Sie unterstützte ebenso wie
  BRAILLE Lite die Tieman B.V. 's CombiBraille-Serie.

  Seit damals hat sich viel geändert. James Bowden ist kein aktiver
  Entwickler mehr, obwohl seine Hilfe auf anderen Gebieten sehr
  geschätzt wird (einschließlich der Dokumentation).

  Das Projekt hat durch die Leistungen zweier neuer Mitglieder, nämlich
  durch die von Nicolas Pitre und Stéphane Doyon, viel profitiert.
  Zusammen entwickelten sie die Unterstützung für Alva und TSI Terminals
  und hatten viele ausgezeichnete Ideen für das System als Ganzes.

  Die stabile Version (1.0) und einige Updates wurden Ende 1996
  veröffentlicht.

  Seither wurde der Support für die Papenmeier Terminals durch ein
  Projekt an der HTL Schellinggasse Abteilung Elektrotechnik,
  Wien/Österreich ergänzt. Das BRLTTY Team hat die Unterstützung für TSI
  Terminal vervollständigt und Unterstützumng für Eurobraille Terminals
  ergänzt. Neue Möglichkeiten wurden ebenfalls ergänzt. Leider arbeitet
  Nikhil Nair nicht mehr für das BRLTTY Projekt.  Nicolas Pitre übernahm
  die Weiterentwicklung des Projekts. Version 2.0 wird im Sommer 1998
  veröffentlicht.

  Siehe Abschnitt ``Hilfe'' für Kontaktdetails des BRLTTY-Teams.

  1.2.  Systemanforderungen

  Um zu funktionieren, läuft BRLTTY nur unter Linux (sowohl PC als auch
  DEC Alpha). Portierung zu anderen unix-ähnlichen Betriebssystemen ist
  momentan nicht geplant, aber wir begrüßen jedes Interesse für solche
  Projekte.

  Mit einem experimenteller Patch kann BRLTTY durch das screen Programm
  ausgeführt werden. Damit besteht die Möglichkeit der Portierung auf
  Plattformen die das Linux vcsa Gerät unterstützen.

  Diese Linux-Version von BRLTTY benützt, abgesehen von der
  standardmäßigen seriellen Schnittstelle, ein spezielles Gerät, das
  durch die Kernel-Version 1.1.92 zuerst verwendet wurde und leichten
  Zugang zum Inhalt der momentanen virtuellen Konsole gibt.

  Dieser wird normalerweise mit /dev/vcsa oder /dev/vcsa0 aufgerufen
  (der Name ist konfigurierbar). Aus diesem Grund ist Kernel 1.1.92 oder
  eine neuere Version erforderlich.

  BRLTTY arbeitet nur mit Anwendungen, die auf Text basieren, daher wird
  jede Form von Graphik- einschließlich des X Window-Systems - kein
  Braille-Output erzeugen. Klarstellung: X Windows kann installiert
  werden, aber sollte nicht gleichzeitig mit BRLTTY laufen.

  Sie müssen natürlich auch eine geeignete Soft- Braille-Anzeige
  besitzen.  BRLTTY arbeitet momentan mit

  ·  TIEMAN B.V.: COMBIBRAILLE 25/45/85;

  ·  ALVA B.V.: ABT 3xx -Serie;

  ·  Telesensory Systems Inc.: PowerBraille 40/65/81; Navigator 20/40/80
     (nur neueste Firmware-Version ?).

  ·  Papenmeier Screen 2D Terminal

  ·  EuroBraille Terminals (nur mit ClioBraille 40 getestet)

  Wir hoffen, daß in Zukunft mit anderen Geräten gearbeitet werden kann,
  wenn Sie also irgendeine vage technische Programmierinformation über
  ein Gerät haben, mit dem Sie gerne arbeiten würden, lassen Sie uns das
  bitte wissen (s. Abschnitt ``Hilfe'').

  Zusaetzlich benötigen Sie die Werkzeuge um das ausführbare Programm
  aus den Quelldateien zuerzeugen: make, C und C++ Compiler usw. Die
  Hilfsprogramme die in den üblichen Linux Distributionen enthalten
  sind, sollten ausreichen. Bei Problemen kontaktieren Sie uns bitte und
  wir werden ein ausführbares Programm für Sie erzeugen.

  1.3.  Anfangsinstallation und Testen

  Bevor Sie BRLTTY zusammenstellen, müssen Sie es für Ihr System
  konfigurieren. Lesen Sie und editieren Sie die Datei Makefile im
  obersten Verzeichnis, indem Sie den Instruktionen folgen. Lesen Sie
  dann die README -Datei im Verzeichnis, das den Treiber für Ihre
  Braille-Anzeige enthält, und suchen Sie nach weiteren spezifischen
  Anzeigeinstruktionen.

  Schreiben Sie

          make clean; make

  um BRLTTY, die Testprogramme und andere kleine Hilfsprogramme zusam­
  menzustellen. Dann schreiben Sie als Administrator (root)

       make install

  um das ausführbare BRLTTY-Programm zu installieren, und zwar zusammen
  mit der Hilfe und den Tabellendateien für Ihre Braille -Anzeige am
  richtigen Platz. Dies führt auch zu /dev/vcsa0 oder einem Äquivalent,
  falls es nicht schon exstiert.

  Sie müssen BRLTTY installieren, bevor Sie die Testprogramme benützen
  können.

  BRLTTY wird wahrscheinlich mit Administratorrechten laufen müssen. Es
  muß auf die virtuelle Konsolenschirminformation zugreifen, auf die
  gewählte serielle Verbindung und auf die Konsole (dies ist notwendig
  für die Anschlagsimulation während der Cursorbewegung, für die
  Ausschneid- und Einfügfunktion und für akustische Signale). Falls Sie
  es schaffen, BRLTTY ohne Root-Rechte laufen zu lassen, lassen Sie uns
  das bitte wissen (s. Abschnitt ``Hilfe'' und Unterstützung).  Die
  Programme brltest und scrtest können als Diagnosewerkzeuge benützt
  werden, falls etwas danebengeht. Beide müssen als Root laufen. Falls
  Sie die Fehlermeldung `brltty: Cannot read screen' bekommen, versuchen
  Sie es mit scrtest. Dies sollte ein Rechteck aus der Mitte des
  Bildschirms herauslesen und nach dem Melden der Bildschirmdimensionen
  und der Cursorposition auf dem Schirm angeben.  Falls BRLTTY lädt, die
  Braille-Anzeige aber nicht zu arbeiten scheint, versuche Sie es mit
  brltest. Dieses Programm sollte eine kurze Botschaft auf der Anzeige
  drucken, eine Eingabe anfordern und verschwinden. Das Skript install-
  brltty kopiert ein funktionierendes, installiertes BRLTTY auf einen
  neuen Platz; dies kann benützt werden, um BRLTTY auf eine oder von
  einer Rootdiskette zu kopieren. Wenn z.B. die Rootfloppy-Disk auf /mnt
  montiert ist und RLTTY gerade auf dem Hauptsystem arbeitet, dann
  kopiert das Schreiben von

        install-brltty /mnt

  BRLTTY, und zwar mit allen seinen Daten und Konfigurationsdateien,
  ebenso wie /dev/vcsa0 oder das Äquivalent zur Rootdiskette.

  Anwendung:

            install-brltty dest-prefix [source-prefix]

  Beachten Sie: Es kam zu etlichen Problemen, als BRLTTY zwischen
  verschiedenen Systemen mit verschiedenen Versionen der gemeinsamen C-
  Bibliothek bewegt wurde. Das ist es wert, erforscht zu werden, falls
  Sie Schwierigkeiten haben. Weiters sind verschiedene kleinere
  Programme enthalten:

     txt2hlp
        Dieses erzeugt Dateien im benötigten Format für die
        Hilfsfunktion von genormten ASCII - Dateien.  txt2hlp wird
        während der Installation automatisch zusammengestellt und
        benützt.

     txt2tbl
        Dieses Programm kann benützt werden, um neue Braille-
        Übersetzungstabellen aus genormten ASCII- Datenblöcken zu
        erzeugen. Siehe für Instruktionen den Abschnitt Hilfsprogramme.

     tbl2txt
        Dieses Programm ist das Gegenteil von txt2tbl. Es kann benützt
        werden, wenn Sie nicht sicher sind, was eine besondere
        Punktkombination darstellt.

  1.4.  Installation für täglichen Gebrauch

  Wenn einmal installiert, wird BRLTTY durch das einzige Kommando brltty
  aufgerufen. Kommandozeilenschalter erlauben, sich über die Standard-
  Konfigurationsdatei, die serielle Schnittstele und die
  Braille-Übersetzungstabelle hinwegzusetzen - siehe für weitere Details
  ``Kommandozeilenoptionen''.

  Wenn BRLTTY jedoch gerade durch einen Systemverwalter benützt wird,
  sollte es wahrscheinlich zur Startzeit geladen werden, also noch bevor
  die Dateisysteme überprüft werden, so daß, falls während der
  Überprüfungen etwas danebengeht und das System in den Single-user-Mode
  geht, die Braille-Anzeige noch immer aktiv ist.

  Die Art, in der dies erfolgt, variiert gemäß der Art des Systems, das
  benützt wird; z.B. wurde auf einem Debian GNU/Linux 0.93R5 System der
  folgende Code nahe dem Beginn von /etc/init.d/boot eingeschoben:

          if  [ -x  /sbin/brltty ]
          then
               /sbin/brltty
           fi

  Dies könnte zur weniger leserlichen Form verkürzt werden:

       [ -x  /sbin/brltty ]  &&  /sbin/brltty

  (Auf einem Slackware-System ist die zu ändernde Datei /etc/rc.d/rc.S.)
  (Bei SuSE kann dieser Aufruf an Anfang Datei /sbin/init.d/boot
  erfolgen).

  Eine mögliche Alternative ist es, BRLTTY von /etc/inittab  zu starten.

  Beachte: Ein killall5 -15 Kommando würde reichen, BRLTTY zu
  unterbrechen: Falls solch ein Kommando von einem rc Script bei Single-
  user-Mode gegeben wird, mag das ein Problem sein, das Aufmerksamkeit
  verlangt.

  2.  Benützung von BRLTTY

  Bevor Sie das System aktivieren, sollten Sie Ihr Braille-Anzeigegerät
  einrichten. In den meisten Fällen ist das einfach: Verbinden Sie es
  bloß an eine geeignete serielle Schnittstelle und drehen Sie die
  Anzeige auf, falls notwendig, wählen Sie dabei die serielle
  Schnittstelle. Nachdem Sie Ihre Anzeige eingerichtet haben, um mit
  BRLTTY zu arbeiten, tippen Sie einfach das Kommando brltty bei einem
  Shellprompt ein (das muß als Root getan werden).  Das Programm wird
  laden, und eine Mitteilung, die den Programmnamen (BRLTTY) und die
  aktuelle Versionsnummer anzeigt, wird kurz auf dem Anzeigegerät
  erscheinen. Danach zeigt die Anzeige eine kleine Fläche des
  Konsolenschirms einschließlich eines Cursors. Als Standard wird der
  Cursor als Punkte 7 und 8 gezeigt, die das Zeichen überlagern, über
  dem er ist.

  Jede Schirmaktivität spiegelt sich in der Braille-Anzeige wider. Die
  Anzeige folgt auch dem Fortschreiten des Cursors auf dem Schirm. Diese
  Eigenschaft ist als Cursorverfolgung (Cursor Tracking)bekannt.

  Ein bloßes Tippen und Lesen der Anzeige ist jedoch nicht genug:
  Versuchen Sie das Eingeben eines Kommandos, das einen Fehler
  verursacht, und drücken Sie ENTER. Der Fehler wird auf dem Schirm
  erscheinen, aber wenn Sie keine Mehrzeilenanzeige haben, wird alles,
  was Sie sehen, ein weiteres Shellprompt sein. Was dann benötigt wird,
  ist ein Mittel, das Braille-Fenster auf dem Schirm umherzubewegen.

  2.1.  Grundlegende Bewegungstasten

  Alle BRLTTY-Kommandos werden dadurch gegeben, daß man die Braille-
  Tasten auf der Braille-Anzeige benützt. Unglücklicherweise scheint es
  keine genormte Steuerungsserie zu geben, die bei verschiedenen
  Steuerungsanzeigen verfügbar ist: einige haben Sechs Punkttasten (wie
  z.B. eine Braille-Schreibmaschine), andere haben Daumentasten; einige
  haben sogar Knöpfe über jedem Zeichen in der Anzeige. Einige haben
  alle drei Typen. Da die Art und die Anordnung solcher Tasten so
  verschieden ist, konsultieren Sie die README - Datei für Ihre Anzeige
  hinsichtlich der Tasten, die Sie für jeden Arbeitsgang drücken. In
  dieser Beschreibung werden die Funktionen mit Namen erläutert.

  Die Kommandos bestehen im allgemeinen aus einer einzelnen Braille-
  Taste oder aus einer Kombination von Braille-Tasten, die immer, wenn
  BRLTTY läuft, verwendet werden können. Die wichtigsten Kommandos sind
  jene, die das Braille-Fenster auf dem Konsolenschirm umherbewegen. Die
  meisten von ihnen beeinflussen den Konsolencursor oder irgendein
  Programm, das gerade läuft, nicht.

     Vertikales Bewegen:

        TOP
           Zeige die oberste Zeile  des Bildschirms

        BOT
           Zeige die unterste Zeile  des Bildschirms

        WINUP
           Gehe  einige Zeilen nach oben

        WINDN
           Gehe  einige Zeilen nach unten

        LNUP
           Gehe eine Zeile hinauf

        LNDN
           Gehe eine Zeile hinunter

        PRDIFLN
           Springe zur vorhergehenden verschiedenen Zeile

        NXDIFLN
           Springe zur nächsten verschiedenen Zeile

        ATTRUP
           Springe zu einer vorhergehenden Zeile mit Zeichen mit anderen
           Attributen als die aktuelle Zeile (NEU)

        ATTRDN
           Springe zu einer nächsten Zeile mit Zeichen mit anderen
           Attributen als die aktuelle Zeile (NEU)

     Horizontales Bewegen:

        LNBEG
           Gehe  zum Start der Zeile

        LNEND
           Gehe  zum Ende der Zeile

        HWINLT
           Bewege die Anzeige um ein halbes Fenster nach links

        HWINRT
           Bewege die Anzeige  um ein halbes Fenster nach rechts

        CHRLT
           Bewege die Anzeige um ein Zeichen nach links

        CHRRT
           Bewege die Anzeige um ein Zeichen nach rechts

     Sowohl horizontales als auch vertikales Bewegen:

        TOP LEFT
           Bewege die Anzeige  nach ganz links oben auf dem Bildschirm

        BOT LEFT
           Bewege die Anzeige nach ganz links unten auf dem Bildschirm

        HOME
           Bewege das Fenster zum Cursor

        FWINLT
           Bewege die Anzeige  um ein Fenster nach links

        FWINRT
           Bewege dich um ein Fenster nach rechts

  Die FWINLT und FWINRT Tasten können benützt werden, um nach hinten und
  nach vorne zu lesen, da sie zur vorhergehenden bzw. folgenden Zeile
  wechseln, falls vom Ende einer Zeile angerufen. Das macht die
  Kommandos besonders nützlich, wenn man Text liest.

  Wenn Sie sich nicht an ein Kommando erinnern, ist Hilfe über das
  Kommando HELP abrufbar. Benützen Sie die Bewegungstasten, wie oben
  erwähnt, um den Hilfebildschirm zu dirigieren, und betätigen Sie HELP
  wieder, um auszusteigen.

  Das Verhalten der LNUP und LNDN Tasten hängt davon ab, ob das
  Überspringen von identischen Zeilen durch das Konfigurationsmenü
  möglich gemacht wird (s. Abschnitt Das Online-
  ``Konfigurationsmenü''). Falls das möglich ist wirken diese Tasten wie
  PRDIFLN und NXDIFLN Tasten. (Beachten Sie, daß die Zeile, die den
  Cursor enthält, als von den anderen verschieden angesehen wird.)

  2.2.  Andere Steuerungen

  Zusätzlich zu den obigen Kommandos hat BRLTTY viele andere nützliche
  Merkmale:

     CSRTRK: Umschalten der Cursorverfolgung
        Standard: eingeschaltet. Wenn die Cursorverfolgung eingeschaltet
        ist, stellt eine Bewegung des Konsolencursors automatisch die
        Anzeigefensterposition ein, so daß der Cursor immer im Fenster
        ist. Es ist manchmal nützlich, dieses Merkmal abzuschalten, so
        können Sie nämlich einen besonderen Abschnitt Ihres Bildschirms
        leicht überwachen.

     DISPMD: Umschalten der Attributanzeige
        Standard: ausgeschaltet. Falls die Merkmalanzeige eingeschaltet
        ist, werden eher die Merkmale (Farbinformation) jedes Zeichens,
        nicht die Zeichen selbst gezeigt. Es kann nützlich sein, die
        Merkmalanzeige aufzudrehen, um die Entdeckung hervorgehobener
        Pun te zu ermöglichen.

     FREEZE: Umschalten des Bildschirms und Einfrieren
        Standard: ausgeschaltet. Die Einfrierfunktion existiert, um
        leichtes Lesen eines wechselnden Bildschirms zu ermöglichen.
        Wenn Sie FREEZE aufdrehen, wird der momentane Bildschirminhalt
        für kurze Zeit gespeichert, und irgendeine neue
        Bildschirmaktivität wird nicht in Braille wiedergegeben. Denken
        Sie daran, das Einfrieren abzuschalten, wenn Sie die normale
        Tätigkeit wieder aufnehmen wollen.

     INFO: Zustandsinformation
        Standard: ausgeschaltet.  Die Zustandsfunktion schaltet die
        Anzeige auf den Zustandsbildschirm. Dieser zeigt Informationen
        einschließlich der physischen Cursorposition, der Position des
        Startes des Braille- Anzeigefensters und der Einstellungen.
        Einige Anzeigetypen lassen einige dieser Informationen andauernd
        in ihren Status Cells aufscheinen. S. die README -Datei zwecks
        Information über Ihre Anzeige.

        Die Fensterstartposition und die physische Cursorposition werden
        in der Form cc:rr gezeigt, wobei cc die aktuelle Säule und rr
        die aktuelle Reihe darstellt. Dann folgen die Einstellungen

        1. Cursorverfolgung (Cursor Tracking). Wenn eingeschaltet, wird
           t gezeigt; sonst ein Leerzeichen

        2. Cursorsichtbarkeit.

           v  Cursor ist sichbar, kein Blinken

           B  Cursor ist sichtbar und blinkt

           b  Cursor ist nicht sichtbar, aber er blinkt

           space
              Leerzeichen (space) Cursor ist nicht sichtbar und das
              Blinken ist weg

        3. Anzeigeweise. a Attribut, t Text

        4. Bildschirmzustand. f eingefroren,  Leerzeichen direkt

        5. Braille-Darstellung, sechs-oder achtpunktig

        6. Blinkende Großbuchstaben. B eingeschaltet, sonst ein
           Leerzeichen.

        Im Zustandsbildschirm können alle Informationen mittels
        Konsolenschirmaktivität oder mittels BRLTTY-Kommandos auf den
        neuesten Stand gebracht werden. Durch betätigen von INFO kehrt
        man in den Normalmodus zurück.

  2.3.  Cursorbewegung

  Es passiert oft, daß Sie das Anzeigefenster auf dem Bildschirm
  umherbewegen, da Sie den Text in einem Texteditor überprüfen, und Sie
  wollen den physischen Cursor dorthin bewegen, wo die Fensteranzeige
  ist. Die Cursorbewegung stellt eine ebensolche Gelegenheit mittels
  Simulieren Ihrer Anschläge bereit.

  Tippen Sie CSRJMP, und Ihr Cursor bewegt sich zur Startposition Ihres
  Anzeigefensters. Einige Braille-Anzeigen haben Knöpfe über jeder
  Zelle: diese können auch benützt werden, um den Cursor in jene
  Position zu bringen. Andere binden Braille-Tasten an die Cursortasten
  auf der Tastatur, um eine händische Form der Cursorbewegung zu
  ermöglichen.

  Beachten Sie: Die Cursorbewegung ist noch nicht völlig verläßlich. Sie
  benützt im Moment "hardcoded" vt100 Cursortastencodes, um sich in die
  richtigen Richtungen zu bewegen. Auch geht sie auf Systemen mit hoher
  Last nicht gut (s. config.h für weitere Details).

  Wenn Sie ein Cursorbewegungskommando geben, wird BRLTTY weiter
  versuchen den Cursor zu bewegen bis sich der Cursor entweder in die
  falsche Richtung bewegt, oder nach für zwei Sekunden die Zielposition
  nicht erreicht hat oder die virtuelle Konsole gewechsetlt wird. Wenn
  Sie ein anderes Cursorbewegungskommando geben, bricht BRLTTY den
  ersten Versuch ab und versucht das neue Ziel zu erreichen.

  Ein neues Kommando CSRJMP_VERT, bewegt den Cursor in die aktuelle
  Zeile ohne die horizontale Position zu ändern. Das ist besonders
  innerhalb von lynx hilfreich, da die Cursortasten Links und Rechts
  nicht verwendet werden.

  2.4.  Ausschneiden und Einfügen

  Diese Option ermöglicht es Ihnen, auf einen Text zuzugreifen, der
  schon auf dem Bildschirm ist, und ihn beim Cursor wieder einzugeben,
  sodaß Zeit gespart wird. Das ist besonders nützlich bei langen
  Dateinamen, komplizierten Kommandos, E-Mail Adressen oder langen URLs.

  Markieren Sie zuerst die rechteckige Fläche auf dem Bildschirm, auf
  die zugegriffen werden soll (ausschneiden): Um die oberste linke Ecke
  zu markieren, drücken Sie CUTBEG. Die oberste linke Ecke der
  markierten Fläche wird in die äußerste linke Position des Fensters
  verlegt, und der Cut Buffer wird beseitigt. Um die unterste rechte
  Ecke zu markieren, drücken Sie CUTEND: der Bereich, den Sie
  festlegten, wird dann in den Cut Buffer hineinkopiert. BRLTTY entfernt
  überflüssige Leerzeichen am Ende jeder Zeile im Cut Buffer, sodaß Sie
  nach Ihrem Ausschneidetext keine überflüssige Leerzeichen haben.
  Einige Anzeigen unterstützen genaueres Ausschneiden und Einfügen,
  indem sie die Knöpfe über den Braille-Zellen benützen; s. die README
  -Datei für Ihre Anzeige.

  Um den Text einzufügen, d.h., ihn bei der Cursor-Position zu
  schreiben, drücken Sie PASTE. Sie können den gespeicherten Test
  beliebig oft ohne Wiederausschneiden einfügen.

  2.5.  Das Online-Konfigurationsmenü

  Wenn Sie BRLTTY  laden, wird eine Konfigurationsdatei geladen mit
  Ihren Einstellungen geladen. Viele EInstellungen von BRLTTY können
  ein- und ausgeschaltet bzw. eingestellt werden. BRLTTY hat ein
  einfaches Menü um diese Einstellungen einfach zu ändern. Das Menü ist
  wird mit CONFMENU aktiviert.  Das Terminal zeigt den Menütitel und
  zeigt den aktuellen Parameter und den Wert.

  Um sich im Menü zu bewegen d.h. sich von einer Einstellung zur
  nächsten zu gelangen, werden die normalen Bewegungstasten verwendet:

     LNUP und LNDN:
        nächste bzw. vorige Einstellung

     TOP oder TOP_LEFT oder HOME:
        erste Einstellung;

     BOT oder BOT_LEFT:
        letzte Einstellung

  Der Wert einer Einstellung wird mit FWINLT und FWINRT geändert: dabei
  werden alternative Einstellungsmöglichkeiten ausgewählt. Um die
  Änderungen zu verwerfen kann RESET verwendet werden.

  Um das Menü zu verlassen und den Normalbetrieb wider aufzunehmen, kann
  CONFMENU oder jede andere nicht angeführte Taste verwendet werden.
  Falls save config gesetzt ist, werden die Einstellungen in der
  Konfigurationsdatei gespeichert.

  Die meisten der Einstellungen, die im Menü verfügbar sind,  können
  auch durch einzelne Tasten () umgeschaltet werden.

  Es folgt eine Beschreibung der einzelnen Einstellungen. Die Tasten zur
  schnellen Änderung sind ebenfalls angeführt.

     cur is visible (Taste: CSRVIS):Umschalten der
        Cursorsichtbarkeit " Standard: eingeschaltet. Diese Funktion,
        wenn sie möglich ist, zeigt die Position des Cursors (entweder
        in Ruhe oder blinkend) auf der Anzeige. Es ist manchmal
        nützlich, diese Funktion auszuschalten, um Text zu überprüfen,
        in dem das Cursorsymbol nur das Lesen zu erschwert.

     Block cursor (Taste: CSRSIZE): Umschalten der
        Cursorform" Standard: hebt den Cursor hervor. Diese Funktion
        schaltet die Cursorform: alle acht Punkte (Block) oder nur die
        unteren zwei (hervorheben). Wähle die Form, die du vorziehst.

     csr blink (Taste: CSRBLINK): Umschalten des blinkenden
        Cursors" Standard: ausgeschaltet. Falls diese Funktion
        ermöglicht wird, blinkt der Bildschirmcursor auf der Anzeige,
        d.h., er ist nur einen Teil der Zeit dort.Wenn der Cursor
        weggeht, können Sie das Zeichen unter dem Cursor sehen.

     cap blink (Taste: CAPBLINK): Umschalten der blinkenden
        Großbuchstaben" Standard: ausgeschaltet. Ähnlich wie bei der
        Cursorblinkfunktion - falls diese Funktion möglich ist, blinken
        Großbuchstaben auf der Anzeige. Dies ist höchst nützlich, wenn
        man Sechspunkte-Braille benützt.

     attr vis (Taste ATTRVIS): Umschalten der
        Attributanzeige durch Unterstreichen (NEU)" Standard:
        ausgeschaltet. Wenn dieser Modus eingeschaltet ist, werden alle
        Zeichen, die nicht den Standardattributen entprechen (inverse
        Darstellung, Farbe, Hervorhebung ...), durch zusätzliche
        Ansteuerung der Punkte 7-8 bzw. Punkt 8 des Braille Zeichens
        dargestellt. Eine zusätzliche Funktion bestimmt, ob diese
        zusätzlichen Punkte blinken oder nicht. Text mit gesetztem
        Punkten 7-8 hat andere Attribute als Text mit gesetztem Punkt 8.
        Diese Anzeige ist derzeit experimentell.

     attr blink (shortcut ATTRBLINK): Toggle blinking of
        attribute underlining" Default: on.  This controls whether or
        not dots superimposed on characters with special attributes will
        blink or not.

     attr blink (Taste ATTRBLINK): Umschalten Attribut
        blinken " Standard: ein. Damit wird das Blinken der zusätzlichen
        Punkte zur Darstellung der Attribute ein- bzw. ausgeschaltet.

     csr blink on und csr blink off: Einstellen der
        Geschwindigkeit des Cursorblinkens" Diese Einstellungen sind
        keine "Umschalter" sondern Zahlenwerte. Diese Einstellung
        bestimmt, wie schnell der Cursor blinkt (wenn der Cursor
        sichtbar ist und Cursor blinken eingeschaltet ist). Der Cursor
        ist abwechselnd ein (on) und ausgeschaltet (off). csr on
        bestimmt wie lange (Anzahl der Schleifendurchläufe im Treiber)
        BRLLTTY den Cursor sichtbar anzeigt. Die Periode ergibt sich
        damit aus der Summe der csr on and csr off Einstellungen. Die
        Dauer einer Schleife ist variabel: ungefähr 0.1 Sekunde. Es kann
        hilfreich sein, die Werte für den Cursor, Großbuchstaben und
        Attribute auf verschiedene Werte zu setzen.

     cap blink on und cap blink off: Einstellen der
        Geschwindigkeit des Blinkens der Großbuchstaben" Diese
        Einstellungen funktionieren wie die Einstellungen zum
        Cursorblinken.

     attr blink on and attr blink off: Einstellen der
        Geschwindigkeit des Blinkens der Attribute" Diese Einstellungen
        funktionieren wie die Einstellungen zum Cursorblinken.

     six dot text (Taste SIXDOTS): Braille-Darstellung
        Standard: 8punktig. Diese Funktion schaltet zwischen sechs- und
        achtpunktigen Braillecodes. Wenn die sechspunktige Art gewählt
        wird, werden die unteren Punkte (7 und 8) aller normalen Zeichen
        entfernt.

     sliding window (Taste SLIDEWIN): Umschalten des
        Gleitfensters" Standard: ausgeschaltet. Dieses Merkmal bewegt in
        Zusammenhang mit der Cursorverfolgung (Cursor Tracking) das
        Anzeigefenster sanfter, wenn sich der physische Cursor jenseits
        der rechten Kante des Fensters bewegt. Wenn sliding window
        ausgeschaltet ist und der Cursor sich jenseits der rechten Kante
        des Fensters bewegt, bewegt sich das Fenster um eine
        Fensterbreite. Wenn eingeschaltet, bewegt sich das Fenster um
        ein Viertel dieser Breite.

     skip ident lns (Taste SKPIDLNS): Umschalten des
        Überspringens von identischen Zeilen" Standard: ausgeschaltet.
        Dies ist eine alternative Möglichkeit des Umschaltens zum
        Überspringen von identischen Zeilen, wenn das Terminal die
        Tasten PRDIFLN und NXDIFLN nicht besitzt. Wenn aktiv,
        überspringen die Tasten LNUP und LNDN identische Zeilen.
     audio signals (Taste SND): Umschalten der
        Audiosignale" Standard: eingeschaltet. Wenn eingeschaltet, gibt
        BRLTTY, wenn bestimmte Ereignisse auftauchen (z.B. Bewegen
        jenseits des Bildschirmrandes), ein akustisches Signal. Dieses
        Signal bestätigt auch die Einstellungen einiger
        Umschaltwahlmöglichkeiten.

     st cells style: Status Zellen Anzeige
        Diese Einstellung ist ein Zahlenwert. Damit kann die Art der
        Statusanzeige umgeschaltet werden. Es gibt im wesentlichen einen
        Anzeigemodus für jede Art von Anzeige und der dort vom
        Entwickler des Treibers bevorzugten Einstellung. Trotzdem ist es
        möglich, die Anzeigen der anderen Terminaltypen einzustellen. Es
        funktionieren aber nicht alle Arten der Anzeige auf allen
        Terminaltypen, da nicht alle Terminals die gleiche Anzahl an
        Statuszellen haben: wenn Sie eine Einstellung für einen anderen
        Terminaltyp mit mehr Statuszellen als Ihr Terminal wählen, kann
        eventuell Information verloren gehen. Die möglichen Anzeigearten
        sind:

     ·  0 = keine Anzeige auf den Statuszellen

     ·  1 = Alva Stil

     ·  2 = Tieman Stil

     ·  3 = PowerBraille 81 Stil (1 Zelle)

     ·  4 = Papenmeier Stil

     save config: Speichern der Konfiguration beim Verlassen
        Wie oben beschrieben, wird damt eingestellt, ob die
        Konfiguration beim Verlassen des Menüs in der
        Konfigurationsdatei gespeichert werden soll.

  Wenn save config augeschaltet ist oder Einstellungen durch die
  Tastenkürzel geändert wurden, kann die aktuelle Konfiguration mit
  SAVECONF abgespeichert werden.

  Die Konfigurationsdatei ist derzeit eine Binärdatei und kann nicht
  editiert werden.

  Um die konfigurierbaren Einstellungen von der Konfigurationsdatei
  ausgehend wiederzuladen, drücken Sie RESET.

  2.6.  Befehl für Zeilenoptionen

  BRLTTY hat die folgenden Kommandozeilenoptionen. Benützen Sie diese,
  um BRLTTY zu starten, wenn Sie andere Einstellungen als die Standards
  benützen.

     -c config-file
        Benütze die Binärkonfigurationsdatei config-file anstatt von
        brlttyconf.dat.

     -d serial-device
        Benützen Sie serial-device, wenn Sie anstatt auf den Standard
        auf ein Braille-Terminal zugreifen (normalerweise /dev/ttySO)

     -t text-trans-file
        Benütze das Übersetzungsprogramm text-trans-file anstatt des
        Standards. In der Version 1.0.1 ist der Standard bei der
        Übersetzung festgelegt; in vorhergehenden Versionen wurde die
        Datei us.tbl geladen.

     -h, --help
        Drucke eine kurze Hilfemitteilung und steige aus

     -l n
        Setze den Debuglevel für syslog auf n (von 0 bis 7, Standard 4)

     -q, --quiet
        Unterdrücke Startmitteilungen

     -v, --version
        Drucke Startmitteilungen und steige aus

  Sie können natürlich die Standardeinstellungen der ersten zwei Angaben
  bei der Übersetzung dauerhaft ändern (ebenso wie welches
  Textübersetzungsprogramm als Standard zu benützen ist)

  3.  Konfigurieren von BRLTTY

  Die meisten, falls nicht alle Einstellungen von BRLTTY, sind durch das
  Konfigurationsmenü konfigurierbar. Jene, die es nicht sind (z.B. die
  Cursorbewegungsleistung), können dauerhaft durch Modifizieren des
  Quellcodes und durch Neuübersetzen geändert werden.

  3.1.  Die Braille-Übersetzungstabellen

  BRLTTY benützt zwei Braille -Übersetzungstabellen, um die Umsetzung
  von Zeichen und Attributen in die Punktkombination festzulegen. Die
  erste und wichtigste ist die Textübersetzungstabelle.

  BRLTTY wird am Anfang so eingestellt, daß es North American Braille
  Computer Code (NABCC) benützt.  BRLTTY hat jedoch, ebenso wie die
  Standard-Textübersetzungsdatei (us.tbl), vier alternative Tabellen:
  french.tbl, german.tbl, simple.t l und uk.tbl. S. Abschnitt ``Befehl
  für Zeilenoptionen'' für Details bei der Benützung von alternativen
  Übersetzungstabellen.

  Die Attributübersetzungstabelle wird benützt, wenn sich BRLTTY im
  Attributanzeigemodus befindet. Derzeit gibt es nur die
  Standardtabelle, also attrib.tbl. Diese wurde so entworfen, daß jeder
  Punkt ein Bit des Attributbytes wiedergibt, und zwar mit d r
  Vordergrundfarbe auf der rechten Seite (Punkte 4,5,6,8) und der
  Hintergrundfarbe auf der linken Seite. Ein Vordergrundbit, das
  eingeschaltet ist, oder ein Hintergrundbit, das ausgeschaltet ist,
  ruft den entsprechenden Punkt hervor: diese seltsame Logik verhilft in
  der Praxis zur Lesbarkeit der üblichsten Attribute.

  Diese Übersetzungstabellen sind 256-byte Binärdateien. Der Zeichen-
  Attribut-Wert wird als Index in die Datei benützt, das Byte in jener
  Lage gibt die entsprechende Punktkombination.

  Die Umsetzung von der Bit-Nummer in die physische Punktposition
  variiert von Anzeige zu Anzeige und kann ziemlich willkürlich sein. Es
  ist daher ein Standardisierungsversuch gemacht worden, wobei die
  Wirkung jedes Bits in einem Tabelleneintrag definiert urde. Die
  Braille-Anzeigetreiber leisten dann jede für die Anzeige notwendige
  Einstellung.
     Bit 0
        Punkt 1 (oben links)

     Bit 1
        Punkt 4 (oben rechts)

     Bit 2
        Punkt 2 (unten 1)

     Bit 3
        Punkt 5 (unten 4)

     Bit 4
        Punkt 3 (unten 2)

     Bit 5
        Punkt 6 (unten 5)

     Bit 6
        Punkt 7 (unten links)

     Bit 7
        Punkt 8 (unten rechts)

  In jedem Fall bedeutet ein gesetztes Bit, daß der entsprechende Punkt
  vorhanden ist.

  Zwei kleine Hilfsprogramme, txt2tbl und tbl2txt, werden für die
  leichte Handhabung dieser Übersetzungsdateien bereitgestellt.

  Die Dateinamen der bei der Übersetzung festgelegten Tabellen werden in
  Makefile definiert. Alle Änderungen, die Sie dabei machen, werden
  einen Effekt auf die Neuübersetzung der Software ausüben.  Sie können
  jedoch eine alternative Textübersetzungstabelle benützen; s. Abschnitt
  ``Befehl für Zeilenoptionen''.

  3.2.  Tabellenhilfsprogramme

  txt2tbl und tbl2txt sind einfache Programme, um zwischen
  Binärtabellendateien und einer Textdarstellung zu übersetzen (wie von
  einigen DOS-Treibern benützt).  Sie können benützt werden, um
  Textübersetzungsdateien zu schaffen oder zu modifizi ren, und zwar
  ohne Notwendigkeit, in die Binäreditoren und die Hexadezimalzahlen zu
  gehen.

  Um jedes dieser Programme zu benützen, schreiben Sie:

            progname input output

  Es gibt keine anderen Kommandozeilenoptionen.

  In der Textdarstellung wird jeder Tabelleneintrag als eine Zeile
  geschrieben. Der aktive Teil der Zeile besteht aus allen Zeichen
  zwischen dem ersten Klammernpaar --- diese Hilfsprogramme ignorieren
  alle anderen Zeichen.

  Zwischen den Klammern sind Zahlen, welche die Einstellung des
  entsprechenden Braille-Punkts wiedergeben (s. oben). Offsets in die
  Binärtabellendatei werden der Reihe nach von 0 bis 255 zugewiesen.

  Zum Beispiel könnte die 91zigste Zeile (ASCII 90 = `Z' ) in der
  Tabelle so ausschauen:

       90   (1  3  567   )

  convtable ist ein Filter, um Braille-Tabellen zwischen verschiedenen
  Binärformaten zu übersetzen: BRLLTY-Norm; der Norm, die von Tieman
  B.V. benützt wird, und derjenigen, die sowohl von Alva B.V. als auch
  von Telesensory Systems Inc. benützt wird.

  Geben Sie z. B. ein:

        convtable src dest < input >
       output

  wo src und dest s für Norm (BRLTTY)- , t für Tieman- oder a für
  Alva/TSI-Umsetzungen sein können.

  4.  Anhang

  4.1.  Verzichterklärung und Lizenz

  Dieses Programm ist "free software"; Sie können es verteilen und/oder
  modifizieren, und zwar unter den Bedingungen der GNU General Public
  License (entweder die Version 2 der Lizenz oder (nach ihrer Wahl) jede
  spätere Version), wie durch die Free Software Foundation
  veröffenlicht.

  Dieses Programm wird in der Hoffnung verteilt, daß es sich als
  nützlich erweisen wird, aber OHNE JEGLICHE GARANTIE; sogar ohne
  Folgegarantie hinsichtlich VERKÄUFLICHKEIT oder GEEIGNETHEIT FÜR EINEN
  BESTIMMTEN ZWECK.  Für weitere Details s. die GNU General License.

  Zusammen mit diesem Programm sollten Sie eine Kopie der GNU General
  Public License erhalten haben; falls nicht, schreiben Sie an die Free
  Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

  (Eine Kopie der GNU General Public License kann man in der Datei
  COPYING im obersten Verzeichnis finden.)

  4.2.  Hilfe und Unterstützung

  BRLTTY repräsentiert die Arbeit eines Teams, das folgende Personen
  einschließt:

  ·  Nicolas Pitre<nico@cam.org> (derzeitiger Instandhalter);

  ·  Stéphane Doyon <s.doyon@videotron.ca> (aktiver Entwickler);

  ·  Nikhil Nair     <nn201@cus.cam.ac.uk> (original Autor, nicht mehr
     aktive);

  ·  James Bowden <jrbowden@bcs.org.uk>(jetzt in beratender Funktion
     tätig).

  Kommentare und Kritik sind willkommen. Wir werden versuchen, schnell
  auf alle (vernünftige) Post zu antworten, geben aber keine Garantie.
  Im allgemeinen, so meinen wir, sollten Sie Email-Botschaften eher an
  alle aktiven Entwickler senden.

  Falls Sie eine Anfrage zu einer bestimmten Anzeigeart, die durch
  BRLTTY unterstützt wird, haben, wollen Sie vielleicht den Autor dieses
  besonderen Treibers kontaktieren. S. die README-Datei im
  entsprechenden Unterverzeichnis für Kontaktdetails.

  4.3.  BRLTTY auf Installations- und Rettungsdisketten

  Von der Version 1.0.1 kann BRLTTY als unabhängig ausführbares Programm
  laufen, also ohne jede Konfigurationsdatei. In diesem Fall werden die
  bei der Übersetzung festgelegten Standardwerte verwendet werden. Falls
  das Verzeichnis /etc/brltty nicht existiert (benützt, um die
  Konfigurationsdatei, die Online-Hilfsdatei und die Tabellendateien zu
  speichern), sucht BRLTTY in /etc nach der Hilfsdatei brlttydev.hlp und
  der Konfigurationsdatei brlttyconf.dat. Auch wenn diese nicht exis
  tieren, wird BRLTTY noch immer funktionieren!

  Anmerkung: Die Datei /dev/vcsa ist ebenfalls notwendig. Sie sollte
  bereits existieren, außer bei sehr alten Linux Distributionen. Sie
  können sie aber selbst erzeugen

       mknod /dev/vcsa0 c 7 128
       chown root.tty /dev/vcsa0
       chmod 660 /dev/vcsa0

  Wenn man Floppy Rootdisks für Installations- oder Rettungszwecke baut,
  ist Raum oft das Wesentliche.  Diese neue Elastizität erlaubt es,
  BRLTTY  als einzeln ausführbares Programm auf solchen Disketten zu
  installieren, wodurch die Raumanforderung herabgesetzt wird.

  Beachten Sie: Das Script install-brltty nimmt an, daß eine
  vollständige Installation von BRLTTY kopiert werden muß.

  Ein Problem, daß beim Einsatz von BRLTTY unter "unbekannten" Umständen
  wie z.B. auf einer Boot Diskette oder in einem unvollständigen System,
  oft auftritt, ist die Verfügbarkeit der für BRLTTY notwendigen
  Bibliotheken. Boot Disketten verwenden oft kleinere oder ältere
  Versionen der Bibliothek die nicht ausreichend sind. Die Lösung
  besteht in der Übersetzung mit der Option -static im Makefile. Damit
  werden alle Abhängigkeiten von Bibliotheken beseitigt, leider ist das
  entstehende ausführbare Programm größer.

  4.4.  Zukünftige Erweiterungen

  Abgesehen von Fehlerkorrekturen und der Unterstützung weiterer
  Braille-Anzeigen, hoffen wir, Zeit vorausgesetzt, an einigen oder
  allen der folgenden Punkte weiterzuarbeiten:

     Bessere Attributbehandlung
        Attributverfolgung, gemischter Text- und Attributmodus etc.

     Neugestaltung von Ausschneiden und Einfügen
        (cut & paste) Linearer Ausschneidemodus (im Gegensatz zum
        Ausschneiden von Rechtecken).

     Neugestaltung der Tonausgabe
        Eine größere Variation von Tönen.
     Scrollverfolgung
        Einsperren des Braille-Fensters auf einer Zeile, sowie sie auf
        dem Schirm entlangwandert.

     Elementare Sprachunterstützung
        Gemischte Brailleschrift und Sprachausgabe zum schnelleren Lesen
        des Texts

     On-the-fly grade II Übersetzung
        Auch das würde ein schnelleres Lesen des Texts erlauben.

  In der Datei TODO finden Sie eine vollständigere Liste.

  4.5.  Bekannte Fehler

  Diese Software wurde getestet auf

  ·  einer Anzahl von PCs: sowohl auf Laptops als auch Desktops;
     Prozessoren von 386SX20  bis Pentium mit verschiedensten
     Speichergrößen;  Linux Distributionen einschließlich Debian,
     Slackware, Red Hat und SuSE;  einer Anzahl von Linux kernels,
     einschließlich 1.2.13, 2.0.0 und 2.0.34.

  ·  einem DEC Alpha: nur einmal getestet, unter RedHat Alpha Linux auf
     einem "noname board", freundlicherweise geliehen dem Cambridge
     University Computer Laboratory von DEC in Reading, England.

  Sie hat sich bis jetzt als stabil erwiesen, aber falls sie nicht auf
  Ihrem System ist oder falls Sie einen Fehler finden, der hier nicht
  erwähnt ist, lassen Sie uns das bitte wissen, sodaß wir versuchen
  können, das Problem zu lösen.

  Derzeit (26 July 1998) sind folgende Problem bekannt:

     Cursor routing Performace
        Routing ist durch eine Schleife in einen Subprozeß, der mit
        niedriger Priorität läuft, implementiert. Dadurch wird ein zu
        hoher Zeitverbaruch vermieden. Verschiedene Systembelastung
        erfordert aber eine andere Einstellung der Parameter. Der
        Standardwert arbeit in einem Standardeditor in einem System mit
        niedriger Last sehr gut, aber unter anderen Umständen, z.B. bei
        einer langsamen seriellen Verbindung sind die Ergebnisse
        schlecht.

     Verwendung mit DOS Emu
        Die Simulation von Tastatureingaben funktioniert nicht mit
        DOSEmus "raw" Tastaturmodus. In diesem Fall müßte die Simulation
        der Tasteneingabe auf eine andere Art geschehen, möglicherweise
        durch Scancodes. Dies beeinflußt das Cursor Routing und die Cut
        & Paste Funktion.

