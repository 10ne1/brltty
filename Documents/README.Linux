~~~~~~~~~~~~~~~
BRLTTY on Linux
~~~~~~~~~~~~~~~

.. include:: prologue.rst

.. |default user| replace:: ``brltty``
.. |super user| replace:: ``root``

.. |cap_setuid| replace:: *cap_setuid*
.. |cap_setgid| replace:: *cap_setgid*
.. |cap_sys_module| replace:: *cap_sys_module*
.. |cap_sys_admin| replace:: **cap_sys_admin**
.. |cap_sys_tty_config| replace:: **cap_sys_tty_config**
.. |cap_mknod| replace:: **cap_mknod**

.. |cap_setuid reason| replace:: switching to the default unprivileged user
.. |cap_setgid reason| replace:: switching to the writable group and joining required groups
.. |cap_sys_module reason| replace:: installing kernel modules
.. |cap_sys_admin reason| replace:: inserting input characters
.. |cap_sys_tty_config reason| replace:: using the built-in PC speaker
.. |cap_mknod reason| replace:: creating special device files

For System Administrators
=========================

Starting BRLTTY
---------------

As the Super User
~~~~~~~~~~~~~~~~~

When BRLTTY starts executing as the super user (|super user|),
i.e. when its initial effective user identifier is 0,
it has unrestricted access to all of the privileged operations
that the host has to offer.
When started in this way, therefore, it first configures itself
to only have access to the `privileged host operations`_ that it actually needs,
and then drops the rest of them by becoming a regular user process.

The steps that are performed to accomplish this are as follows:

1) Switch to executing as a regular user process.
2) Install the needed `kernel modules`_.
3) Establish the needed `group memberships`_.
4) Assign to itself its `required capabilities`_.
5) Relinquish all of the other capabilities.

The decision regarding which regular user to run as is made as follows:

1) If the ``-u`` command line option has been supplied then:

   * Run as the specified user if it exists.
   * Stop with a nonzero exit status if it doesn't exist.

2) Run as the default unprivileged user (|default user|) if it exists.

3) Continue to run as |super user|.

As a Regular User
~~~~~~~~~~~~~~~~~

When BRLTTY starts executing as a regular user (not |super user|),
i.e. when its initial effective user identifier isn't 0,
it "hopes" that
the system,
the user who started it,
and its executable
have all been adequately configured.
While BRLTTY will continue to run in spite of inadequate host configuration,
its individual components will likely fail.
These failures can range all the way from minor to severe.

* Adequate system configuration means that
  all of the needed `kernel modules`_ have already been installed.
  This isn't necessary if the (temporary) capability
  |cap_sys_module| has also been assigned to BRLTTY's executable.

* Adequate user configuration means that the user who started BRLTTY
  has all of the needed `group memberships`_.
  This isn't necessary if the (temporary) capability
  |cap_setgid| has also been assigned to BRLTTY's executable.

* Adequate executable configuration means that
  all of the `required capabilities`_ have been assigned to it.

If the (temporary) capabilities |cap_setuid| and |cap_setgid|
have both also been assigned to BRLTTY's executable
then it's able to switch to its default unprivileged user (|default user|)
even when started as a regular user.
If the default unprivileged user doesn't exist then
BRLTTY continues to run as the user who started it.
This feature doesn't allow an explicit user to be specified
(via the ``-u`` command line option).

Assigning the Capabilities to the Executable
--------------------------------------------

First, here's a summary of all of the capabilities that BRLTTY needs
when started `as a regular user`_.

* The `required capabilities`_ are highlighted **this way**.
  They're needed throughout BRLTTY's execution.

* The `temporary capabilities`_ are highlighted *this way*.
  They're only needed when BRLTTY starts,
  and are relinquished when they're no longer needed.

====================  ===========================
Capability            Reason
--------------------  ---------------------------
|cap_setuid|          |cap_setuid reason|
|cap_setgid|          |cap_setgid reason|
|cap_sys_module|      |cap_sys_module reason|
|cap_sys_admin|       |cap_sys_admin reason|
|cap_sys_tty_config|  |cap_sys_tty_config reason|
|cap_mknod|           |cap_mknod reason|
====================  ===========================

The Command
~~~~~~~~~~~

The command to assign all of the capabilities,
i.e. both the `required capabilities`_ and the `temporary capabilities`_,
to BRLTTY's executable
so that it'll be fully functional when started as a regular user,
without requiring any additional administrator configuration,
is::

  setcap cap_setuid,cap_setgid,cap_sys_module,cap_sys_admin,cap_sys_tty_config,cap_mknod+p /path/to/brltty

This command must be run as the super user (|super user|).

The ``setcaps`` Script
~~~~~~~~~~~~~~~~~~~~~~

The top-level directory of BRLTTY's source tree contains
a script named ``setcaps`` that simplifies the job of
assigning the needed capabilities to BRLTTY's executable.
Its default is to assign all of them.
For all of the details, run this command::

  setcaps -h

It requires one positional argument - the path to BRLTTY's executable.
It also accepts a number of options (which must precede that path).
In particular, these are the options that
remove capabilities from the full set.

======  ====================  ===========================
Option  Capability            Reason
------  --------------------  ---------------------------
-u      |cap_setuid|          |cap_setuid reason|
-g      |cap_setgid|          |cap_setgid reason|
-m      |cap_sys_module|      |cap_sys_module reason|
-i      |cap_sys_admin|       |cap_sys_admin reason|
-s      |cap_sys_tty_config|  |cap_sys_tty_config reason|
-d      |cap_mknod|           |cap_mknod reason|
======  ====================  ===========================

Privileged Host Operations
--------------------------

The privileged host operations that BRLTTY needs to be able to perform
in order to be fully functional are:

Kernel Modules
~~~~~~~~~~~~~~

BRLTTY relies on functionality provided by these kernel modules:

**pcspkr**
  For playing alert tunes via the built-in PC speaker.

**uinput**
  For creating virtual keyboards via
  ``/dev/uinput`` (or ``/dev/input/uinput``).

Group Memberships
~~~~~~~~~~~~~~~~~

BRLTTY relies on file system and server (daemon) access
granted via membership in these groups:

**audio**
  For playing sound via the ALSA framework.

**dialout**
  For serial I/O via these ``/dev/`` devices:

  **ttyS<n>**
    Actual serial ports.

  **ttyACM<n>**
    USB to serial adapters that implement the CDC ACM standard.

  **ttyUSB<n>**
    Other USB to serial adapters.

**input**
  For intercepting keyboard key events via the devices in ``/dev/input/``.
  This capability is used to support keyboard key tables.

**pulse-access**
  For playing sound via the Pulse Audio daemon.

**root**
  Note that this is the ``root`` group - not the ``root`` user.
  It's used for:

  * USB I/O via ``USBFS`` (using the devices in ``/dev/bus/usb/``).

  * Creating virtual keyboards via
    ``/dev/uinput`` (or ``/dev/input/uinput``).

**tty**
  * For reading screen content via the ``/dev/vcs`` devices.

  * For virtual console monitoring and control via the ``/dev/tty<n>`` devices.

Required Capabilities
~~~~~~~~~~~~~~~~~~~~~

BRLTTY uses privileged kernel operations
that are granted via these capabilities:

|cap_mknod|
  For creating needed but missing special device files.

|cap_sys_admin|
  For using ``TIOCSTI`` to insert input characters typed on a braille device.

|cap_sys_tty_config|
  For using ``KDMKTONE`` and ``KIOCSOUND`` to play alert tunes via the built-in PC speaker.

Temporary Capabilities
~~~~~~~~~~~~~~~~~~~~~~

BRLTTY only uses the privileged kernel operations
that are granted via these capabilities
when it starts `as a regular user`_.
They allow it to configure itself,
and thus not rely so heavily on explicit administrator configuration,
and are relinquished right after this has been done.

|cap_setgid|
  If this capability has also been assigned to BRLTTY's executable
  then ignore the invoking user's group memberships
  and internally establish the actually needed `group memberships`_.

|cap_setuid|
  If this capability has also been assigned to BRLTTY's executable
  then switching to the default unprivileged user (|default user|)
  can be done when BRLTTY is started `as a regular user`_.
  The |cap_setgid| temporary capability is also required
  so that BRLTTY can switch to that user's primary group.
  This feature doesn't allow switching to an explicit user
  (via the ``-u`` command line option).

|cap_sys_module|
  If this capability has also been assigned to BRLTTY's executable
  then the needed `kernel modules`_ needn't have been already installed
  because they can be internally installed.

