ext {
  nativeRootDirectory = "${rootDir.absolutePath}/../.."
}

ext {
  nativeCoreDirectory = nativeRootDirectory + "/Programs"
  nativeCoreWrapper = 'libbrltty_jni.so'
  nativeCoreLibrary = 'libbrltty_core.so'
  nativeCoreClient = 'libbrlapi.so'

  nativeBindingsDirectory = nativeRootDirectory + "/Bindings/Java"
  nativeBindingsLibrary = 'libbrlapi_java.so'
  nativeBindingsClasses = 'libbrlapi.jar'
}

task makeCoreComponents (type: Exec) {
  workingDir nativeCoreDirectory
  commandLine 'make', nativeCoreLibrary, nativeCoreWrapper, nativeCoreClient
  ignoreExitValue false
}

task cleanCoreComponents (type: Exec) {
  workingDir nativeCoreDirectory
  commandLine 'make', 'clean'
  ignoreExitValue true
}

task installCoreComponents (type: Copy) {
  into "src/main/jniLibs/armeabi"
  from nativeCoreDirectory
  include "*.so"
}

task makeBindingsComponents (type: Exec) {
  workingDir nativeBindingsDirectory
  commandLine 'make', 'all'
  ignoreExitValue false
}

task cleanBindingsComponents (type: Exec) {
  workingDir nativeBindingsDirectory
  commandLine 'make', 'clean'
  ignoreExitValue true
}

task installBindingsComponents (type: Copy) {
  into "src/main"

  from(nativeBindingsDirectory) {
    into "libs"
    include "*.jar"
  }

  from(nativeBindingsDirectory) {
      into "jniLibs/armeabi"
      include "*.so"
  }
}

installCoreComponents.dependsOn makeCoreComponents
installBindingsComponents.dependsOn makeBindingsComponents

android {
  tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(installCoreComponents)
  }

  tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(installBindingsComponents)
  }

  clean.dependsOn(cleanCoreComponents)
  clean.dependsOn(cleanBindingsComponents)
}

